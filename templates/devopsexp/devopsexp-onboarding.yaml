apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: devopsexp
  title: Onboarding DevOps Experience
  description: Demo new repo
  tags:
    - devopsexp
    - harness
    - demo
spec:
  owner: diego.pereira@harness.io
  type: service
  parameters:
    - title: Repo Detail
      required:
        - name
      properties:
        name:
          title: Name of your Banking Service - Repository
          type: string
          description: Unique name of the service
        token:
          title: Harness Token
          type: string
          ui:widget: password
          ui:field: HarnessAuthToken
    - title: Service Infrastructure Details
      required:
        - provider
        - db
        - cache
        - lint
        - owner
      properties:
        provider:
          title: Choose a cloud provider for Deployment
          type: string
          enum: ['GCP', 'AWS', "AZURE"]
          default: GCP
        db:
          title: Choose a Database Type for the Service
          type: string
          enum: ['None', 'MySQL', 'Postgres', 'MongoDB']
          default: None
        cache:
          title: Choose a caching system for the Service
          type: string
          enum: ['None', 'Redis']
          default: None
        lint:
          title: Choose a Python linter for the Service
          type: string
          enum: ['None', 'Black', 'Flake8']
          default: None
        owner:
          title: Choose an Owner for the Service
          type: string
          ui:field: OwnerPicker
          ui:options:
            allowedKinds:
              - Group
  steps:
    # Call Harness Pipelines to create the service infra and other things
    - id: trigger
      name: Creating Your repo for the Service
      action: trigger:harness-custom-pipeline
      input:
        url: 'https://app.harness.io/ng/account/6_vVHzo9Qeu9fXvj-AcbCQ/ci/orgs/SE_Sandbox/projects/DevOps_Experience/pipelines/Onboard_new_Service/pipeline-studio/?storeType=INLINE'
        inputset:
          provider: ${{ parameters.provider }}
          db: ${{ parameters.db }}
          cache: ${{ parameters.cache }}
          lint: ${{ parameters.lint }}
          name: ${{ parameters.name }}
        apikey: ${{ parameters.token }}

