apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: onboarding-banking
  title: "Banking Demo Onboarding"
  description: Setup Demo Environment for Banking Demo
  tags:
    - banking-demo
    - javascript
    - platform-demo
    - feature-flags
    - ci
    - cd
  links:
    - url: https://app.harness.io/ng/account/6_vVHzo9Qeu9fXvj-AcbCQ/home/orgs/default/projects/GIT_FLOW_DEMO/details
      title: Project Details
      icon: dashboard
spec:
  owner: diego.pereira@harness.io
  type: service
  parameters:
    - title: Onboarding your Harness Banking Demo App Environment
      required:
        - gitUser
        - triggerPipelines
      properties:
        gitUser:
          type: string
          title: GitHub User
          description: GitHub User
          default: ''
        triggerPipelines:
          type: string
          title: Trigger Pipelines
          description: Should it Trigger Pipelines? (true/false)
          enum: ["true", "false"]
          default: 'true'
        token:
          title: Harness Token
          type: string
          ui:widget: password
          ui:field: HarnessAuthToken
  steps:
    - id: log-message
      name: Log Message
      action: debug:log
      input:
        message: 'Hello, ${{ parameters.gitUser }}!'
    - id: log-message-2
      name: Log Message 2
      action: debug:log
      input:
        message: 'Starting your Harness Banking Demo App Environment'
    - id: trigger
      name: Onboarding Harness Banking Demo
      action: trigger:harness-custom-pipeline
      input:
        url: 'https://app.harness.io/ng/account/6_vVHzo9Qeu9fXvj-AcbCQ/cd/orgs/default/projects/GIT_FLOW_DEMO/pipelines/Onboarding_Pipeline/pipeline-studio/?repoIdentifier=gitopsdemo&branch=main'
        inputset:
          gitUser: ${{ parameters.gitUser }}
          triggerPipelines: ${{ parameters.triggerPipelines }}
        apikey: ${{ parameters.token }}
    - id: log-message-finished
      name: Log Message 3
      action: debug:log
      input:
        message: 'Thank you! You are ready to start!'
  output:
    links:
      - title: Pipeline Details
        url: ${{ steps.trigger.output.PipelineUrl }}
      - title: GitUser
        url: ${{ parameters.gitUser }}
---
apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: bankingservicev2
  title: Create a Banking Service
  description: An template for the scaffolder that creates a Banking service
  tags:
    - django
    - harness
    - banking-demo
spec:
  owner: diego.pereira@harness.io
  type: service
  parameters:
    - title: Django Service Details
      required:
        - name
        - repository
        - isPublish
      properties:
        name:
          title: Name of your Banking Service / Repository
          type: string
          description: Unique name of the service
        repoUrl:
          title: URL of the Repository
          type: string
          description: This will be the name of Repository on Github
        isPublish:
          title: Do you wish to publish the internal registry?
          type: boolean
    - title: Service Infrastructure Details
      required:
        - provider
        - db
        - cache
        - lint
        - owner
      properties:
        provider:
          title: Choose a cloud provider for Deployment
          type: string
          enum: ['GCP', 'AWS', "AZURE"]
          default: GCP
        db:
          title: Choose a Database Type for the Service
          type: string
          enum: ['None', 'MySQL', 'Postgres', 'MongoDB']
          default: None
        cache:
          title: Choose a caching system for the Service
          type: string
          enum: ['None', 'Redis']
          default: None
        lint:
          title: Choose a Python linter for the Service
          type: string
          enum: ['None', 'Black', 'Flake8']
          default: None
        owner:
          title: Choose an Owner for the Service
          type: string
          ui:field: OwnerPicker
          ui:options:
            allowedKinds:
              - Group
  steps:
    # Each step executes an action, in this case one templates files into the working directory.
    - id: fetch-base
      name: Fetch Base
      action: fetch:template
      input:
        url: ./content
        values:
          name: ${{ parameters.name }}
    # This step publishes the contents of the working directory to GitHub.
    - id: publish
      name: Publish
      action: publish:github
      input:
        allowedHosts: ['github.com']
        description: This is ${{ parameters.name }}
        repoUrl: ${{ parameters.repoUrl }}
    # The final step is to register our new component in the catalog.
    - id: register
      name: Register
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps.publish.output.repoContentsUrl }}
        catalogInfoPath: '/catalog-info.yaml'
    # Call Harness Pipelines to create the service infra and other things
    - id: trigger
      name: Creating Your Infra for the Service
      action: trigger:harness-custom-pipeline
      input:
        url: 'https://app.harness.io/ng/#/account/dh-iBL35SqqpuqJF0yDjpQ/home/orgs/default/projects/CIQuickstart/pipelines/fetchfromcustom/pipeline-studio/?storeType=INLINE'
        inputset:
          provider: ${{ parameters.provider }}
          db: ${{ parameters.db }}
          cache: ${{ parameters.cache }}
          lint: ${{ parameters.lint }}
          name: ${{ parameters.name }}
          repository: ${{ parameters.repository }}
  # Outputs are displayed to the user after a successful execution of the template.
  output:
    links:
      - title: Repository
        url: ${{ steps.publish.output.remoteUrl }}
      - title: Open in catalog
        icon: catalog
        entityRef: ${{ steps.register.output.entityRef }}